{ k: 5, n: 32, cs: ConstraintSystem { num_fixed_columns: 3, num_advice_columns: 2, num_instance_columns: 1, num_selectors: 2, selector_map: [Column { index: 1, column_type: Fixed
            }, Column { index: 2, column_type: Fixed
            }
        ], gates: [Gate { name: "mul", constraint_names: [
                    ""
                ], polys: [Product(Sum(Product(Advice { query_index: 0, column_index: 0, rotation: Rotation(0)
                    }, Advice { query_index: 1, column_index: 1, rotation: Rotation(0)
                    }), Negated(Advice { query_index: 2, column_index: 0, rotation: Rotation(1)
                    })), Fixed { query_index: 1, column_index: 1, rotation: Rotation(0)
                    })
                ], queried_selectors: [Selector(0, true)
                ], queried_cells: [VirtualCell { column: Column { index: 0, column_type: Advice
                        }, rotation: Rotation(0)
                    }, VirtualCell { column: Column { index: 1, column_type: Advice
                        }, rotation: Rotation(0)
                    }, VirtualCell { column: Column { index: 0, column_type: Advice
                        }, rotation: Rotation(1)
                    }
                ]
            }, Gate { name: "add", constraint_names: [
                    ""
                ], polys: [Product(Sum(Sum(Advice { query_index: 0, column_index: 0, rotation: Rotation(0)
                    }, Advice { query_index: 1, column_index: 1, rotation: Rotation(0)
                    }), Negated(Advice { query_index: 2, column_index: 0, rotation: Rotation(1)
                    })), Fixed { query_index: 2, column_index: 2, rotation: Rotation(0)
                    })
                ], queried_selectors: [Selector(1, true)
                ], queried_cells: [VirtualCell { column: Column { index: 0, column_type: Advice
                        }, rotation: Rotation(0)
                    }, VirtualCell { column: Column { index: 1, column_type: Advice
                        }, rotation: Rotation(0)
                    }, VirtualCell { column: Column { index: 0, column_type: Advice
                        }, rotation: Rotation(1)
                    }
                ]
            }
        ], advice_queries: [(Column { index: 0, column_type: Advice
            }, Rotation(0)), (Column { index: 1, column_type: Advice
            }, Rotation(0)), (Column { index: 0, column_type: Advice
            }, Rotation(1))
        ], num_advice_queries: [
            2,
            1
        ], instance_queries: [(Column { index: 0, column_type: Instance
            }, Rotation(0))
        ], fixed_queries: [(Column { index: 0, column_type: Fixed
            }, Rotation(0)), (Column { index: 1, column_type: Fixed
            }, Rotation(0)), (Column { index: 2, column_type: Fixed
            }, Rotation(0))
        ], permutation: Argument { columns: [Column { index: 0, column_type: Instance
                }, Column { index: 0, column_type: Fixed
                }, Column { index: 0, column_type: Advice
                }, Column { index: 1, column_type: Advice
                }
            ]
        }, lookups: [], constants: [Column { index: 0, column_type: Fixed
            }
        ], minimum_degree: None
    }, regions: [Region { name: "load private", columns: {Column { index: 0, column_type: Advice
                }
            }, rows: Some((0,
            0)), enabled_selectors: {}, cells: [(Column { index: 0, column_type: Advice
                },
                0)
            ]
        }, Region { name: "load private", columns: {Column { index: 0, column_type: Advice
                }
            }, rows: Some((1,
            1)), enabled_selectors: {}, cells: [(Column { index: 0, column_type: Advice
                },
                1)
            ]
        }, Region { name: "load private", columns: {Column { index: 0, column_type: Advice
                }
            }, rows: Some((2,
            2)), enabled_selectors: {}, cells: [(Column { index: 0, column_type: Advice
                },
                2)
            ]
        }, Region { name: "load constant", columns: {Column { index: 0, column_type: Advice
                }
            }, rows: Some((3,
            3)), enabled_selectors: {}, cells: [(Column { index: 0, column_type: Advice
                },
                3)
            ]
        }, Region { name: "mul", columns: {Column { index: 0, column_type: Advice
                }, Column { index: 1, column_type: Advice
                }
            }, rows: Some((4,
            5)), enabled_selectors: {Selector(0, true): [
                    4
                ]
            }, cells: [(Column { index: 0, column_type: Advice
                },
                4), (Column { index: 1, column_type: Advice
                },
                4), (Column { index: 0, column_type: Advice
                },
                5)
            ]
        }, Region { name: "mul", columns: {Column { index: 0, column_type: Advice
                }, Column { index: 1, column_type: Advice
                }
            }, rows: Some((6,
            7)), enabled_selectors: {Selector(0, true): [
                    6
                ]
            }, cells: [(Column { index: 0, column_type: Advice
                },
                6), (Column { index: 1, column_type: Advice
                },
                6), (Column { index: 0, column_type: Advice
                },
                7)
            ]
        }, Region { name: "add", columns: {Column { index: 1, column_type: Advice
                }, Column { index: 0, column_type: Advice
                }
            }, rows: Some((8,
            9)), enabled_selectors: {Selector(1, true): [
                    8
                ]
            }, cells: [(Column { index: 0, column_type: Advice
                },
                8), (Column { index: 1, column_type: Advice
                },
                8), (Column { index: 0, column_type: Advice
                },
                9)
            ]
        }, Region { name: "mul", columns: {Column { index: 0, column_type: Advice
                }, Column { index: 1, column_type: Advice
                }
            }, rows: Some((10,
            11)), enabled_selectors: {Selector(0, true): [
                    10
                ]
            }, cells: [(Column { index: 0, column_type: Advice
                },
                10), (Column { index: 1, column_type: Advice
                },
                10), (Column { index: 0, column_type: Advice
                },
                11)
            ]
        }
    ], current_region: None, fixed: [
        [Assigned(0x0000000000000000000000000000000000000000000000000000000000000002), Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned
        ],
        [Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000001), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x00000000000000000000000000000000000000000000000000000000000001001), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000001), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000)
        ],
        [Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000001), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000), Assigned(0x0000000000000000000000000000000000000000000000000000000000000000)
        ]
    ], advice: [
        [Assigned(0x000000000000000000000000000000000000000000000000000000000000000a), Assigned(0x0000000000000000000000000000000000000000000000000000000000000005), Assigned(0x0000000000000000000000000000000000000000000000000000000000000003), Assigned(0x0000000000000000000000000000000000000000000000000000000000000002), Assigned(0x000000000000000000000000000000000000000000000000000000000000000a), Assigned(0x0000000000000000000000000000000000000000000000000000000000000064), Assigned(0x0000000000000000000000000000000000000000000000000000000000000005), Assigned(0x000000000000000000000000000000000000000000000000000000000000000f), Assigned(0x0000000000000000000000000000000000000000000000000000000000000064), Assigned(0x0000000000000000000000000000000000000000000000000000000000000073), Assigned(0x0000000000000000000000000000000000000000000000000000000000000002), Assigned(0x00000000000000000000000000000000000000000000000000000000000000e6), Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Poison(26), Poison(27), Poison(28), Poison(29), Poison(30), Poison(31)
        ],
        [Unassigned, Unassigned, Unassigned, Unassigned, Assigned(0x000000000000000000000000000000000000000000000000000000000000000a), Unassigned, Assigned(0x0000000000000000000000000000000000000000000000000000000000000003), Unassigned, Assigned(0x000000000000000000000000000000000000000000000000000000000000000f), Unassigned, Assigned(0x0000000000000000000000000000000000000000000000000000000000000073), Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Unassigned, Poison(26), Poison(27), Poison(28), Poison(29), Poison(30), Poison(31)
        ]
    ], instance: [
        [
            0x00000000000000000000000000000000000000000000000000000000000000e6,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000,
            0x0000000000000000000000000000000000000000000000000000000000000000
        ]
    ], selectors: [
        [
            false,
            false,
            false,
            false,
            true,
            false,
            true,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ],
        [
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            true,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false,
            false
        ]
    ], permutation: Assembly { columns: [Column { index: 0, column_type: Instance
            }, Column { index: 0, column_type: Fixed
            }, Column { index: 0, column_type: Advice
            }, Column { index: 1, column_type: Advice
            }
        ], mapping: [
            [(2,
                11), (0,
                1), (0,
                2), (0,
                3), (0,
                4), (0,
                5), (0,
                6), (0,
                7), (0,
                8), (0,
                9), (0,
                10), (0,
                11), (0,
                12), (0,
                13), (0,
                14), (0,
                15), (0,
                16), (0,
                17), (0,
                18), (0,
                19), (0,
                20), (0,
                21), (0,
                22), (0,
                23), (0,
                24), (0,
                25), (0,
                26), (0,
                27), (0,
                28), (0,
                29), (0,
                30), (0,
                31)
            ],
            [(2,
                3), (1,
                1), (1,
                2), (1,
                3), (1,
                4), (1,
                5), (1,
                6), (1,
                7), (1,
                8), (1,
                9), (1,
                10), (1,
                11), (1,
                12), (1,
                13), (1,
                14), (1,
                15), (1,
                16), (1,
                17), (1,
                18), (1,
                19), (1,
                20), (1,
                21), (1,
                22), (1,
                23), (1,
                24), (1,
                25), (1,
                26), (1,
                27), (1,
                28), (1,
                29), (1,
                30), (1,
                31)
            ],
            [(3,
                4), (2,
                6), (3,
                6), (2,
                10), (2,
                0), (2,
                8), (2,
                1), (3,
                8), (2,
                5), (3,
                10), (1,
                0), (0,
                0), (2,
                12), (2,
                13), (2,
                14), (2,
                15), (2,
                16), (2,
                17), (2,
                18), (2,
                19), (2,
                20), (2,
                21), (2,
                22), (2,
                23), (2,
                24), (2,
                25), (2,
                26), (2,
                27), (2,
                28), (2,
                29), (2,
                30), (2,
                31)
            ],
            [(3,
                0), (3,
                1), (3,
                2), (3,
                3), (2,
                4), (3,
                5), (2,
                2), (3,
                7), (2,
                7), (3,
                9), (2,
                9), (3,
                11), (3,
                12), (3,
                13), (3,
                14), (3,
                15), (3,
                16), (3,
                17), (3,
                18), (3,
                19), (3,
                20), (3,
                21), (3,
                22), (3,
                23), (3,
                24), (3,
                25), (3,
                26), (3,
                27), (3,
                28), (3,
                29), (3,
                30), (3,
                31)
            ]
        ], aux: [
            [(2,
                11), (0,
                1), (0,
                2), (0,
                3), (0,
                4), (0,
                5), (0,
                6), (0,
                7), (0,
                8), (0,
                9), (0,
                10), (0,
                11), (0,
                12), (0,
                13), (0,
                14), (0,
                15), (0,
                16), (0,
                17), (0,
                18), (0,
                19), (0,
                20), (0,
                21), (0,
                22), (0,
                23), (0,
                24), (0,
                25), (0,
                26), (0,
                27), (0,
                28), (0,
                29), (0,
                30), (0,
                31)
            ],
            [(1,
                0), (1,
                1), (1,
                2), (1,
                3), (1,
                4), (1,
                5), (1,
                6), (1,
                7), (1,
                8), (1,
                9), (1,
                10), (1,
                11), (1,
                12), (1,
                13), (1,
                14), (1,
                15), (1,
                16), (1,
                17), (1,
                18), (1,
                19), (1,
                20), (1,
                21), (1,
                22), (1,
                23), (1,
                24), (1,
                25), (1,
                26), (1,
                27), (1,
                28), (1,
                29), (1,
                30), (1,
                31)
            ],
            [(2,
                4), (2,
                6), (3,
                6), (1,
                0), (2,
                4), (2,
                8), (2,
                6), (3,
                8), (2,
                8), (3,
                10), (1,
                0), (2,
                11), (2,
                12), (2,
                13), (2,
                14), (2,
                15), (2,
                16), (2,
                17), (2,
                18), (2,
                19), (2,
                20), (2,
                21), (2,
                22), (2,
                23), (2,
                24), (2,
                25), (2,
                26), (2,
                27), (2,
                28), (2,
                29), (2,
                30), (2,
                31)
            ],
            [(3,
                0), (3,
                1), (3,
                2), (3,
                3), (2,
                4), (3,
                5), (3,
                6), (3,
                7), (3,
                8), (3,
                9), (3,
                10), (3,
                11), (3,
                12), (3,
                13), (3,
                14), (3,
                15), (3,
                16), (3,
                17), (3,
                18), (3,
                19), (3,
                20), (3,
                21), (3,
                22), (3,
                23), (3,
                24), (3,
                25), (3,
                26), (3,
                27), (3,
                28), (3,
                29), (3,
                30), (3,
                31)
            ]
        ], sizes: [
            [
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                3,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                3,
                1,
                2,
                1,
                2,
                1,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ],
            [
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                1,
                2,
                1,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1
            ]
        ]
    }, usable_rows: 0..26
}